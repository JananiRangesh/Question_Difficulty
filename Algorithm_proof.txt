The given  algorithm basically finds the difficulty of a question on the basis (easy, medium or hard).
         It will be very useful in a learning Basis and assesment platform, so that the students gets the clear view about the test results and it is also  benificial for the analysis.

The difficulty can be calculated based on the following factors:
    *Manually set  difficulty.
    *Total number of students who have attempted the question.
    *Time taken by each student to answer the question.
    * Number of times the answer was  being  changed in the case of  MCQ type question.
    *Number of times the program was compiled if it is a programming question.
    *Number of hints used ,in the case of programming type question.
    *Feedback given by the students for the particular questions.
    *Total number of students who have answered it right.
    *Total number of students who have answered it wrong.
    *Total number of students who have answered it partially correct.
    *Maximum marks allocated for the particular question.

#Input is accepted in the form of a file that contains values  seperated by comma(,) ,of the above mentioned factors for each question.

#The values for the above mentioned factors is retrieved from the input file.

--> A hashmap is created to store  String and arraylist of values that contain time taken, number of changes or compilations and number of hints of each student.

--> The total values of time taken, number of changes or compilations and number of hints are calculated from the hashmap((key,value)-pair) .

--> Average values for the each factors  are found.

--> Difficulty based on each factor is calculated as below:

    #Manually assigned difficulty

        Based on the manually set difficulty(Easy, Medium or Hard), the difficulty is set.
        The difficulty is added to an arraylist.
    
     #Time taken

        Based on the type of question as MCQ(includes fillup and match the following) or Programming and also taking manually set difficulty into consideration, few values are set and if the average time breaches these values, difficulty is set based on that.
        Then difficulty is added to the arraylist.

    #Number of changes or compilations

        Based on the type of question as MCQ(includes fillup and match the following) or Programming and also taking manually assigned difficulty into consideration few values are set and if the average number of changes or compilations breaches the values, difficulty is set based on that.
        The difficulty is added to the arraylist.

    #Number of hints

        Based on the manually assigned difficulty, a range is denoting each type of difficulty.
        The difficulty is added to the arraylist.

    #Feedback

        Based on the feedback given by students as easy, medium or hard, the difficulty is set.
        The difficulty is added to the arraylist.

    #Marks

        The total marks of the question for all the students is calculated by taking a product of total students and maximum marks provided.
        The total student marks are calculated by taking a product of the number of students who got it right and the maximum marks, product of number of students who got it wrong and 0, product of number of students who got it partially right and half of the maximum marks. All these products are summed up to give the student marks.
        The range for the difficulty of the students marks is set by dividing the total marks by 3.
        The difficulty is then calculated by where the student marks fit in the range.
        The difficulty is added to the arraylist.

   #Difficulty of the question(Final output)

          The final difficulty of the question is calculated from the arraylist containing the difficulties of all the factors.
           It is done by comparing the frequencies of each of the difficulties in the arraylist.

   OUTPUT:
              The output is as desired
              Question type:
              Manually set difficulty:
              Total no.of  students:
              Question Difficulty:


               
